{"ast":null,"code":"import _objectSpread from \"/Users/kiwonkim/Downloads/react-js-redux-cartitem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { DECREASE, INCREASE, CLEAR_CART, REMOVE, GET_TOTALS, TOGGLE_AMOUNT } from \"./actions\";\nimport cartItems from \"./cart-items\";\nconst initialStore = {\n  cart: cartItems,\n  total: 0,\n  amount: 0\n};\n\nfunction reducer(state = initialStore, action) {\n  if (action.type === CLEAR_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      cart: []\n    });\n  }\n\n  if (action.type === DECREASE) {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload.id) {\n        cartItem = _objectSpread(_objectSpread({}, cartItem), {}, {\n          amount: cartItem.amount - 1\n        });\n      }\n\n      return cartItem;\n    });\n    return _objectSpread(_objectSpread({}, state), {}, {\n      cart: tempCart\n    });\n  }\n\n  if (action.type === INCREASE) {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload.id) {\n        cartItem = _objectSpread(_objectSpread({}, cartItem), {}, {\n          amount: cartItem.amount + 1\n        });\n      }\n\n      return cartItem;\n    });\n    return _objectSpread(_objectSpread({}, state), {}, {\n      cart: tempCart\n    });\n  }\n\n  if (action.type === REMOVE) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      cart: state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n    });\n  }\n\n  if (action.type === GET_TOTALS) {\n    let _state$cart$reduce = state.cart.reduce((cartTotal, cartItem) => {\n      const price = cartItem.price,\n            amount = cartItem.amount;\n      const itemTotal = price * amount;\n      cartTotal.total += itemTotal;\n      cartTotal.amount += amount;\n      return cartTotal;\n    }, {\n      total: 0,\n      amount: 0\n    }),\n        total = _state$cart$reduce.total,\n        amount = _state$cart$reduce.amount;\n\n    total = parseFloat(total.toFixed(2));\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total,\n      amount\n    });\n  }\n\n  if (action.type === TOGGLE_AMOUNT) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      cart: state.cart.map(cartItem => {\n        if (cartItem.id === action.payload.id) {\n          if (action.payload.toggle === \"inc\") {\n            return cartItem = _objectSpread(_objectSpread({}, cartItem), {}, {\n              amount: cartItem.amount + 1\n            });\n          }\n\n          if (action.payload.toggle === \"dec\") {\n            return cartItem = _objectSpread(_objectSpread({}, cartItem), {}, {\n              amount: cartItem.amount - 1\n            });\n          }\n        }\n\n        return cartItem;\n      })\n    });\n  }\n\n  return state;\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kiwonkim/Downloads/react-js-redux-cartitem/src/reducer.js"],"names":["DECREASE","INCREASE","CLEAR_CART","REMOVE","GET_TOTALS","TOGGLE_AMOUNT","cartItems","initialStore","cart","total","amount","reducer","state","action","type","tempCart","map","cartItem","id","payload","filter","reduce","cartTotal","price","itemTotal","parseFloat","toFixed","toggle"],"mappings":"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","sourcesContent":["import {\n  DECREASE,\n  INCREASE,\n  CLEAR_CART,\n  REMOVE,\n  GET_TOTALS,\n  TOGGLE_AMOUNT\n} from \"./actions\";\nimport cartItems from \"./cart-items\";\n\nconst initialStore = {\n  cart: cartItems,\n  total: 0,\n  amount: 0\n};\nfunction reducer(state = initialStore, action) {\n  if (action.type === CLEAR_CART) {\n    return { ...state, cart: [] };\n  }\n  if (action.type === DECREASE) {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload.id) {\n        cartItem = { ...cartItem, amount: cartItem.amount - 1 };\n      }\n      return cartItem;\n    });\n\n    return { ...state, cart: tempCart };\n  }\n  if (action.type === INCREASE) {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload.id) {\n        cartItem = { ...cartItem, amount: cartItem.amount + 1 };\n      }\n      return cartItem;\n    });\n    return { ...state, cart: tempCart };\n  }\n  if (action.type === REMOVE) {\n    return {\n      ...state,\n      cart: state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n    };\n  }\n  if (action.type === GET_TOTALS) {\n    let { total, amount } = state.cart.reduce(\n      (cartTotal, cartItem) => {\n        const { price, amount } = cartItem;\n        const itemTotal = price * amount;\n\n        cartTotal.total += itemTotal;\n        cartTotal.amount += amount;\n\n        return cartTotal;\n      },\n      {\n        total: 0,\n        amount: 0\n      }\n    );\n    total = parseFloat(total.toFixed(2));\n    return { ...state, total, amount };\n  }\n  if (action.type === TOGGLE_AMOUNT) {\n    return {\n      ...state,\n      cart: state.cart.map(cartItem => {\n        if (cartItem.id === action.payload.id) {\n          if (action.payload.toggle === \"inc\") {\n            return (cartItem = { ...cartItem, amount: cartItem.amount + 1 });\n          }\n          if (action.payload.toggle === \"dec\") {\n            return (cartItem = { ...cartItem, amount: cartItem.amount - 1 });\n          }\n        }\n        return cartItem;\n      })\n    };\n  }\n  return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}